[{"C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\index.js":"1","C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\App.js":"2","C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\screens\\HomeScreen.js":"4","C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\screens\\ProductScreen.js":"5","C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\components\\product.js":"6","C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\components\\Rating.js":"7","C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\components\\LoadingBox.js":"8","C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\components\\MessageBox.js":"9","C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\utils.js":"10","C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\Store.js":"11","C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\screens\\CartScreen.js":"12","C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\screens\\SigninScreen.js":"13","C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\screens\\ShippingAddressScreen.js":"14","C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\components\\CheckoutSteps.js":"15","C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\screens\\SignupScreen.js":"16","C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\screens\\PaymentMethodScreen.js":"17","C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\screens\\PlaceOrderScreen.js":"18","C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\screens\\orderScreen.js":"19","C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\screens\\OrderHistoryScreen.js":"20","C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\screens\\ProfileScreen.js":"21"},{"size":878,"mtime":1656982503201,"results":"22","hashOfConfig":"23"},{"size":4790,"mtime":1657041149253,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1655069396220,"results":"25","hashOfConfig":"23"},{"size":2022,"mtime":1655685825386,"results":"26","hashOfConfig":"23"},{"size":4548,"mtime":1656546121587,"results":"27","hashOfConfig":"23"},{"size":1573,"mtime":1656547695317,"results":"28","hashOfConfig":"23"},{"size":1699,"mtime":1656545221509,"results":"29","hashOfConfig":"23"},{"size":232,"mtime":1655289766790,"results":"30","hashOfConfig":"23"},{"size":202,"mtime":1655290069678,"results":"31","hashOfConfig":"23"},{"size":153,"mtime":1655291276032,"results":"32","hashOfConfig":"23"},{"size":3295,"mtime":1656891279193,"results":"33","hashOfConfig":"23"},{"size":5901,"mtime":1656547676241,"results":"34","hashOfConfig":"23"},{"size":2481,"mtime":1656633145108,"results":"35","hashOfConfig":"23"},{"size":3257,"mtime":1656544999141,"results":"36","hashOfConfig":"23"},{"size":508,"mtime":1656545055699,"results":"37","hashOfConfig":"23"},{"size":3279,"mtime":1656723575057,"results":"38","hashOfConfig":"23"},{"size":2040,"mtime":1656722455123,"results":"39","hashOfConfig":"23"},{"size":7339,"mtime":1656947578623,"results":"40","hashOfConfig":"23"},{"size":10038,"mtime":1656989318440,"results":"41","hashOfConfig":"23"},{"size":3316,"mtime":1657032137632,"results":"42","hashOfConfig":"23"},{"size":3676,"mtime":1657040482469,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ls5yks",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},"C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\index.js",[],[],"C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\App.js",["113","114","115"],[],"\nimport { BrowserRouter, Link, Route, Routes} from \"react-router-dom\"\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport {ToastContainer} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\"\nimport Container from \"react-bootstrap/Container\"\nimport {LinkContainer} from \"react-router-bootstrap\"\nimport Badge from \"react-bootstrap/esm/Badge\";\nimport Nav from \"react-bootstrap/Nav\"\nimport NavDropdown from \"react-bootstrap/NavDropdown\"\nimport { useContext, useEffect, useState } from \"react\";\nimport { Store } from \"./Store\";\nimport CartScreen from \"./screens/CartScreen\";\nimport SigninScreen from \"./screens/SigninScreen\";\nimport ShippingAddressScreen from \"./screens/ShippingAddressScreen\";\nimport SignUpScreen from \"./screens/SignupScreen\";\nimport PaymentMethodScreen from \"./screens/PaymentMethodScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrderScreen from \"./screens/orderScreen\";\nimport OrderHistoryScreen from \"./screens/OrderHistoryScreen\";\nimport NavbarCollapse from \"react-bootstrap/esm/NavbarCollapse\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\n\nfunction App() {\n  const {state, dispatch: ctxDispatch} = useContext(Store);\n  const {cart, userInfo} = state\n  \n  const signoutHandler = () => {\n    ctxDispatch({type: 'USER_SIGNOUT'})\n    localStorage.removeItem('userInfo')\n    localStorage.removeItem('shippingAddress')\n    localStorage.removeItem('paymentMethod')\n    window.location.href='/signin'\n  }\n\n  return (\n    <BrowserRouter>\n    <div className=\"d-flex flex-column site-container\">\n      <ToastContainer position=\"top-center\" limit={1} />\n      <header >\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" >\n          <Container>\n            <LinkContainer to=\"/\">\n            <Navbar.Brand>Jonas nätbutik</Navbar.Brand>\n            </LinkContainer>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n            \n            <Nav className=\"me-auto  w-100  justify-content-end\">\n                  <Link to=\"/cart\" className=\"nav-link\">\n                    Kundvagn\n                    {cart.cartItems.length > 0 && (\n                      <Badge pill bg=\"success\">\n                              {cart.cartItems.reduce((a, c) => a + c.quantity, 0)}\n                      </Badge>\n                    )}\n\n                      </Link>\n                   {userInfo ? (\n                    <NavDropdown title={userInfo.name} id=\"basic-nav-dropdown\">\n                        <LinkContainer to=\"/profile\">\n                          <NavDropdown.Item>Användare</NavDropdown.Item>\n\n                        </LinkContainer>\n                        <LinkContainer to=\"/orderhistory\">\n                          <NavDropdown.Item>Orderhistorik</NavDropdown.Item>\n\n                        </LinkContainer>\n                        <LinkContainer to=\"/contactscreen\">\n                          <NavDropdown.Item>Kontakta oss</NavDropdown.Item>\n\n                        </LinkContainer>\n\n\n\n                      {/* <NavDropdown.Divider/> */}\n                      <Link\n                      className=\"dropdown-item\"\n                      to=\"#signout\"\n                      onClick={signoutHandler}\n                      \n                      >\n                        Logga Ut\n                      </Link>\n                      \n\n                      \n                    </NavDropdown>\n                   ):(\n                    <Link className=\"nav-link\" to=\"/signin\">\n                    Logga In\n                    </Link>\n                   )}\n\n                    </Nav>\n                    </Navbar.Collapse>\n          </Container>\n        </Navbar>\n        \n      </header>\n\n    <main>\n    <Container className=\"mt-3\">\n      <Routes>\n        <Route path=\"/product/:slug\" element={< ProductScreen />} />\n        <Route path=\"/cart\" element={<CartScreen/>} />\n        <Route path=\"/\" element={<HomeScreen/>} />\n        <Route path=\"/signin\" element={<SigninScreen/>} />\n        <Route path=\"/signup\" element={<SignUpScreen/>} />\n        <Route path=\"/profile\" element={<ProfileScreen/>} />\n        <Route path=\"/payment\" element={<PaymentMethodScreen/>} />\n        <Route path=\"/placeorder\" element={<PlaceOrderScreen/>} />\n        <Route path=\"/order/:id\" element={<OrderScreen/>}></Route>\n        <Route path=\"/shipping\" element={<ShippingAddressScreen/>}></Route>\n        <Route path=\"/orderhistory\" element={<OrderHistoryScreen/>}></Route>\n      </Routes>\n    </Container>\n    </main>\n    <footer>\n      <div className=\"text-center bg-light\"> Ⓒ Jonas Schwartz</div>\n    </footer>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\screens\\HomeScreen.js",["116","117"],[],"import { useEffect,useReducer, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logger from \"use-reducer-logger\"\r\nimport Row from \"react-bootstrap/Row\"\r\nimport Col from \"react-bootstrap/Col\"\r\n\r\nimport axios from 'axios'\r\nimport Product from \"../components/product\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\n\r\nconst reducer = (state,action) => {\r\n    switch(action.type) {\r\n        case `FETCH_REQUEST`:\r\n            return{...state,loading: true};\r\n         case `FETCH_SUCCESS`:\r\n            return  {...state,products:action.payload, loading: false};\r\n          case `FETCH_FAIL`:\r\n            return{...state,loading:false, error: action.payload};\r\n            default:   \r\n            return state;\r\n    }\r\n}\r\n\r\nfunction HomeScreen () {\r\n    const [{loading, error,products}, dispatch] = useReducer(logger(reducer), {\r\n        products:[],\r\n        loading: true,\r\n        error: ``,\r\n    })\r\n// const [products, setProducts] = useState([]);\r\nuseEffect(() => {\r\nconst fetchData = async () => {\r\n    dispatch({type: `FETCH_REQUEST`})\r\n    try {\r\n    const result = await axios.get('/api/products');\r\n    dispatch({type:`FETCH_SUCCESS`, payload: result.data})\r\n    } catch(err) {\r\n        dispatch({type: `FETCH_FAIL`, payload: err.message})\r\n    }   \r\n\r\n    \r\n\r\n    // setProducts(result.data);\r\n\r\n};\r\nfetchData();\r\n}, []);\r\n\r\n    return <div>\r\n        <Helmet>\r\n            <title>Jonas Nätbuik</title>\r\n        </Helmet>\r\n            <h1 className=\"nyheter-text\">Nyheter</h1>\r\n\r\n<div className=\"products\">\r\n{\r\n    loading? \r\n    ( <LoadingBox/>\r\n    ) :\r\n    error? ( \r\n        <MessageBox variant=\"danger\">{error}</MessageBox>\r\n    ): (\r\n        <Row>\r\n{products.map(product => (\r\n    <Col key={product.slug} sm={6} md={4} lg={3} className=\"mb-3  \">\r\n<Product  product={product}></Product>\r\n</Col>\r\n    ))}\r\n\r\n    </Row>\r\n)}\r\n\r\n</div>\r\n    </div>\r\n}\r\n\r\nexport default HomeScreen;","C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\screens\\ProductScreen.js",["118"],[],"import axios from \"axios\";\r\nimport { useContext, useEffect, useReducer } from \"react\";\r\nimport {  Navigate, useParams } from \"react-router-dom\"\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\"\r\nimport Rating from \"../components/Rating\";\r\nimport Badge from \"react-bootstrap/Badge\"\r\nimport Card from \"react-bootstrap/Card\"\r\nimport Button from \"react-bootstrap/esm/Button\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport { getError } from \"../utils\";\r\nimport { Store } from \"../Store\";\r\n\r\nconst reducer = (state,action) => {\r\n    switch(action.type) {\r\n        case `FETCH_REQUEST`:\r\n            return{...state,loading: true};\r\n         case `FETCH_SUCCESS`:\r\n            return  {...state,product:action.payload, loading: false};\r\n          case `FETCH_FAIL`:\r\n            return{...state,loading:false, error: action.payload};\r\n            default:   \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction ProductScreen () {\r\n    \r\nconst params = useParams();\r\nconst  {slug} = params;\r\n\r\nconst [{loading, error,product}, dispatch] = useReducer(reducer, {\r\n    product:[],\r\n    loading: true,\r\n    error: ``,\r\n})\r\n\r\nuseEffect(() => {\r\nconst fetchData = async () => {\r\ndispatch({type: `FETCH_REQUEST`})\r\ntry {\r\nconst result = await axios.get(`/api/products/slug/${slug}`);\r\ndispatch({type:`FETCH_SUCCESS`, payload: result.data})\r\n} catch(err) {\r\n    dispatch({type: `FETCH_FAIL`, payload: getError(err)})\r\n    }   \r\n};\r\nfetchData();\r\n},[slug])\r\n\r\n\r\nconst {state, dispatch: ctxDispatch} = useContext(Store);\r\nconst {cart} = state;\r\nconst addToCartHandler = async () => {\r\n const existItem = cart.cartItems.find((x) =>x._id === product._id)\r\n const quantity = existItem ? existItem.quantity + 1 : 1\r\n const { data } = await axios.get(`/api/products/${product._id}`)\r\n\r\n\r\nif (data.countInStock < quantity) {\r\n    window.alert(\"Sorry, Product is out of stock\");\r\n    return;\r\n}\r\n\r\nctxDispatch({\r\n    type:'CART_ADD_ITEM',\r\n     payload: {...product, quantity}})\r\n}\r\n\r\n\r\n\r\n\r\nreturn loading? (\r\n    <LoadingBox/>\r\n) : error? (\r\n    <MessageBox variant=\"danger\">{error}</MessageBox>\r\n): (\r\n  <div>\r\n  <Row>\r\n    <Col md={6}>\r\n        <img\r\n         className=\"img-large\"\r\n        src={product.image}\r\n        alt={product.name}\r\n       ></img>\r\n    </Col>\r\n    \r\n    <Col md={3}>\r\n    <ListGroup variant=\"flush\">\r\n        <ListGroup.Item>\r\n           <Helmet>\r\n            <title>{product.name}</title>\r\n           </Helmet>\r\n                <h1>{product.name}</h1>\r\n\r\n           \r\n            \r\n        </ListGroup.Item>\r\n        <ListGroup.Item>\r\n            <Rating\r\n              rating={product.rating}\r\n              numReviews={product.numReviews}\r\n            ></Rating>\r\n        </ListGroup.Item>\r\n        <ListGroup.Item> Pris : {product.price} sek</ListGroup.Item>\r\n           \r\n        <ListGroup.Item> Beskrivning:\r\n            <p>{product.description}</p>\r\n        </ListGroup.Item>\r\n\r\n    </ListGroup>\r\n\r\n    </Col>\r\n    <Col md={3}>\r\n        <Card>\r\n            <Card.Body>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <Row>\r\n                        <Col>Pris:</Col>\r\n                        <Col>{product.price} sek</Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Row>\r\n                        <Col>status:</Col>\r\n                        <Col>{product.countInStock>0?\r\n                        <Badge bg=\"success\"> {product.countInStock}st i lager</Badge>\r\n                            :\r\n                            <Badge bg=\"danger\">Ej tillgänglig</Badge>\r\n                    } </Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n                        {product.countInStock > 0 && (\r\n                            <ListGroup.Item>\r\n                                <div className=\"d-grid\">\r\n                                    <Button onClick={addToCartHandler} className=\"bg-dark border-none\" variant=\"primary\">\r\n                                        Lägg till\r\n                                    </Button>\r\n                                </div>\r\n                            </ListGroup.Item>\r\n                        )}\r\n\r\n\r\n                </ListGroup>\r\n            </Card.Body>\r\n        </Card>\r\n    </Col>\r\n  </Row>\r\n  </div>\r\n  \r\n    \r\n)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default ProductScreen","C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\components\\product.js",[],[],"C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\components\\Rating.js",[],[],"C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\components\\LoadingBox.js",[],[],"C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\components\\MessageBox.js",[],[],"C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\utils.js",[],[],"C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\Store.js",[],[],"C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\screens\\CartScreen.js",[],[],"C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\screens\\SigninScreen.js",[],[],"C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\screens\\ShippingAddressScreen.js",[],[],"C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\components\\CheckoutSteps.js",[],[],"C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\screens\\SignupScreen.js",["119"],[],"import Button from \"react-bootstrap/esm/Button\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport {Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\"\r\nimport Form from \"react-bootstrap/Form\"\r\nimport axios from \"axios\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Store } from \"../Store\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getError } from \"../utils\";\r\n\r\nexport default function SignUpScreen() {\r\n    const navigate = useNavigate();\r\n    const {search} = useLocation();\r\n    const redirectInUrl = new URLSearchParams(search).get('redirect');\r\n    const redirect = redirectInUrl ? redirectInUrl : '/'\r\n     \r\n    \r\n    const[name, setName] = useState('')\r\n    const[password,setPassword] = useState('')\r\n    const[email,setEmail] = useState('')\r\n    const[confirmPassword,setConfirmPassword] = useState('')\r\n\r\nconst {state, dispatch: ctxDispatch} = useContext(Store)\r\nconst {userInfo} = state;\r\n\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault(); \r\n        \r\n\r\n        if(password !== confirmPassword) {\r\n            toast.error('Lösenordet matchar inte')\r\n            return;\r\n        }    \r\n        try{\r\n            const {data} = await axios.post('/api/users/signup', {\r\n                name,\r\n                email,\r\n                password,\r\n            })\r\n            ctxDispatch({type: 'USER_SIGNIN', payload: data})\r\n            localStorage.setItem('userInfo', JSON.stringify(data));\r\n            navigate(redirect || '/');\r\n            } catch (err) {\r\n                toast.error('Din emailaddress är redan registrerad');\r\n            }\r\n    };\r\n\r\n    useEffect(()=> {\r\n        if(userInfo) {\r\n            navigate(redirect);\r\n        }\r\n    },[navigate,redirect, userInfo]);\r\n\r\n    return (\r\n    <Container className=\"container small-container\">\r\n\r\n        <Helmet>\r\n            <title>Skapa Konto</title>\r\n        </Helmet>\r\n        <h1 className=\"my-3\">Skapa Konto</h1>\r\n        <Form onSubmit={submitHandler}>\r\n\r\n        <Form.Group className=\"mb-3\" controllid=\"name\">\r\n        <Form.Label>Namn</Form.Label>\r\n        <Form.Control type=\"name\"required onChange={(e) =>setName(e.target.value)}/>\r\n        </Form.Group>\r\n\r\n\r\n\r\n\r\n         <Form.Group className=\"mb-3\" controllid=\"email\">\r\n        <Form.Label>Email</Form.Label>\r\n        <Form.Control type=\"email\"required onChange={(e) =>setEmail(e.target.value)}/>\r\n        </Form.Group>\r\n\r\n        \r\n\r\n        \r\n\r\n        <Form.Group className=\"mb-3\" controllid=\"password\">\r\n\r\n            <Form.Label>Lösenord</Form.Label>\r\n            <Form.Control type=\"password\"required onChange={(e) =>setPassword(e.target.value)}/> \r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controllid=\"password\">\r\n\r\n<Form.Label>Bekräfta Lösenord</Form.Label>\r\n<Form.Control type=\"password\"required onChange={(e) =>setConfirmPassword(e.target.value)}/> \r\n</Form.Group>\r\n\r\n\r\n\r\n        <div className=\"mb-3\">\r\n            <Button type=\"submit\">Skapa Konto</Button>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n            Har du redan ett konto? {' '}\r\n            <Link to={`/signin?redirect=${redirect}`}>Logga In</Link>\r\n        </div>\r\n\r\n\r\n        </Form>\r\n    </Container>\r\n    )\r\n}\r\n","C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\screens\\PaymentMethodScreen.js",[],[],"C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\screens\\PlaceOrderScreen.js",[],[],"C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\screens\\orderScreen.js",[],[],[],"C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\screens\\OrderHistoryScreen.js",[],[],"C:\\Users\\jonas\\OneDrive\\Skrivbord\\E-comm\\frontend\\src\\screens\\ProfileScreen.js",["120","121"],[],"import React, { useContext, useReducer, useState } from 'react'\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { Store } from '../Store';\r\nimport Form from \"react-bootstrap/Form\"\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport { getError } from '../utils';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst reducer = (state,action) => {\r\n    switch (action.type) {\r\n        case 'UPDATE_REQUEST':\r\n            return{...state,loadingUpdate:true}\r\n            case 'UPDATE_SUCCESS':\r\n                return{...state, loadingUpdate:false}\r\n                case 'UPDATE_FAIL' :\r\n                    return{...state, loadingUpdate:false}\r\n                    default: \r\n                    return state;\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nexport default function ProfileScreen() {\r\n    const {state, dispatch: ctxDispatch} = useContext(Store);\r\n    const {userInfo} = state;\r\n    const [name, setName] = useState(userInfo.name)\r\n    const [email, setEmail] = useState(userInfo.email)\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const [{loadingUpdate}, dispatch] = useReducer(reducer, {\r\n        loadingUpdate: false,\r\n    })\r\n\r\n    const submitHandler = async (e) =>{\r\n        e.preventDefault();\r\n        try {\r\n            const { data } = await axios.put(\r\n                '/api/users/profile',\r\n                {\r\n                    name,\r\n                    email,\r\n                    password,\r\n                },\r\n                {\r\n                    headers: {Authorization:`Bearer ${userInfo.token}`}\r\n                }\r\n            );\r\n            dispatch({\r\n                type:'UPDATE_SUCCESS'\r\n            });\r\n            ctxDispatch({type:'USER_SIGNIN', payload: data})\r\n            localStorage.setItem('userInfo',JSON.stringify(data));\r\n            toast.success('Profil Uppdaterad')\r\n        } catch (err) {\r\n            dispatch({\r\n                type:'FETCH_FAIL'\r\n            });\r\n            toast.error(getError(err))\r\n        }\r\n    }\r\n  return (\r\n    <div className='container small-container' >\r\n        <Helmet>\r\n            <title>Användare</title>\r\n        </Helmet>\r\n        <h1 className='my-3'>Min Profil</h1>\r\n\r\n        <form onSubmit={submitHandler}>\r\n    <Form.Group className=\"mb-3\" controllid=\"namn\">\r\n        <Form.Label>Namn</Form.Label>\r\n        <Form.Control\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            requrired\r\n        >\r\n\r\n        </Form.Control>\r\n    </Form.Group>\r\n\r\n    <Form.Group className=\"mb-3\" controllid=\"email\">\r\n        <Form.Label>Epost</Form.Label>\r\n        <Form.Control\r\n            type='email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            requrired\r\n        >\r\n\r\n        </Form.Control>\r\n    </Form.Group>\r\n\r\n    <Form.Group className=\"mb-3\" controllid=\"password\">\r\n        <Form.Label>Lösenord</Form.Label>\r\n        <Form.Control\r\n            type='password'\r\n            \r\n            onChange={(e) => setPassword(e.target.value)}\r\n            requrired\r\n        >\r\n\r\n        </Form.Control>\r\n    </Form.Group>\r\n    <Form.Group className=\"mb-3 \" controllid=\"password\">\r\n        <Form.Label>Bekräfta Lösenord</Form.Label>\r\n        <Form.Control\r\n            type='password'\r\n            \r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            requrired\r\n        >\r\n\r\n        </Form.Control>\r\n    </Form.Group>\r\n    <div className='mb-3'>\r\n        <Button className='bg-dark border-light' type=\"submit\">Uppdatera</Button>\r\n    </div>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n",{"ruleId":"122","severity":1,"message":"123","line":13,"column":22,"nodeType":"124","messageId":"125","endLine":13,"endColumn":31},{"ruleId":"122","severity":1,"message":"126","line":13,"column":33,"nodeType":"124","messageId":"125","endLine":13,"endColumn":41},{"ruleId":"122","severity":1,"message":"127","line":23,"column":8,"nodeType":"124","messageId":"125","endLine":23,"endColumn":22},{"ruleId":"122","severity":1,"message":"126","line":1,"column":32,"nodeType":"124","messageId":"125","endLine":1,"endColumn":40},{"ruleId":"122","severity":1,"message":"128","line":2,"column":10,"nodeType":"124","messageId":"125","endLine":2,"endColumn":14},{"ruleId":"122","severity":1,"message":"129","line":3,"column":11,"nodeType":"124","messageId":"125","endLine":3,"endColumn":19},{"ruleId":"122","severity":1,"message":"130","line":10,"column":10,"nodeType":"124","messageId":"125","endLine":10,"endColumn":18},{"ruleId":"122","severity":1,"message":"131","line":35,"column":12,"nodeType":"124","messageId":"125","endLine":35,"endColumn":27},{"ruleId":"122","severity":1,"message":"132","line":37,"column":13,"nodeType":"124","messageId":"125","endLine":37,"endColumn":26},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'NavbarCollapse' is defined but never used.","'Link' is defined but never used.","'Navigate' is defined but never used.","'getError' is defined but never used.","'confirmPassword' is assigned a value but never used.","'loadingUpdate' is assigned a value but never used."]